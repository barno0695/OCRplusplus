<?xml version="1.0" ?>
<sec_map>
	<section>
		<chunk>Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 10091019, Baltimore, Maryland, USA, June 23-25 2014. c 2014 Association for Computational Linguistics Language-Aware Truth Assessment of Fact Candidates Ndapandula Nakashole Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA, 15213 ndapa@cs.cmu.edu Tom M. Mitchell Carnegie Mellon University 5000 Forbes Avenue Pittsburgh, PA, 15213 tom.mitchell@cs.cmu.edu Abstract This paper introduces FactChecker, language-aware approach to truth-finding. FactChecker differs from prior approaches in that it does not rely on iterative peer voting, instead it leverages language to infer believability of fact candidates. In particular, FactChecker makes use of lin- guistic features to detect if a given source objectively states facts or is speculative and opinionated. To ensure that fact candidates mentioned in similar sources have similar believability, FactChecker augments objectivity with a co-mention score to compute the overall believability score of a fact candidate. Our experiments on various datasets show that FactChecker yields higher accuracy than existing approaches. </chunk>
	</section>
	<section>
		<heading>1 Introduction </heading>
		<chunk>Truth-finding algorithms aim to separate true statements (facts) from false information. More specifically, given a set of statements whose truth- fulness is unknown (fact candidates), the key goal of truth-finding algorithms is to generate a ranking such that true statements are ranked ahead of false ones. Truth-finders have the potential to address a major obstacle on the Web: the problem of sources spreading inaccurate and conflicting information. This problem continues to grow with the develop- ment of tools for easy Web authorship. Blogs, fo- rums and social networking websites are not sub- ject to traditional journalistic standards. Conse- quently, the accuracy of information reported by these sources is often unclear. Even more estab- lished newspapers and websites may sometimes report false information as they race to break sto- ries. Therefore, truth-finding is becoming an in- creasingly important problem. Information extrac- tion projects aim to distill relational facts from nat- ural language text (Auer et al., 2007; Bollacker et al., 2008; Carlson et al., 2010; Fader et al., 2011; Nakashole et al., 2011; Del Corro and Gemulla, 2013). These projects have produced knowledge bases containing many millions of relational facts between entities. However, despite these impres- sive advances, there are still major limitations re- garding precision. Within the context of informa- tion extraction, fact extractors assign confidence scores to extracted facts. However, such scores are often tied to the extractors ability to read and understand natural language text. This is differ- ent from a score that indicates the degree to which a given fact candidate is believable. Such a be- lievability score is sometimes also referred to as a credibility score or truthfulness score. The be- lievability score reflects the likelihood that a given statement is true. Truth-finding algorithms aim to compute this score for each fact candidate. Prior truth-finding methods are mostly based on iterative voting, where votes are propagated from sources to fact candidates and then back to sources (Yin et al., 2007; Galland et al., 2010; Paster- nack and Roth, 2010; Li et al., 2011; Yin and Tan, 2011). At the core of iterative voting is the assumption that candidates mentioned by many sources are more likely to be true. However, ad- ditional aspects of a source influence its trustwor- thiness, besides external votes. Our goal is to accurately assess truthfulness of fact candidates by taking into account the lan- guage of sources that mention them. A Mechan- ical Turk study we carried out revealed that there is a significant correlation between objectivity of language and trustworthiness of sources. Objec- tivity of language refers to the use of neutral, impartial language, which is not personal, judg- mental, or emotional. Trustworthiness refers to 1009 a source of information being reliable and truth- ful. We use linguistics features to detect if a given source objectively states facts or is speculative and opinionated. Additionally, in order to ensure that fact candidates mentioned in similar sources have similar believability scores, our believability computation model incorporates influence of co- mentions. However, we must avoid falsely boost- ing co-mentioned fact candidates. Our model ad- dresses potential false boosts in two ways: first, by ensuring that co-mention influence is only propa- gated to related fact candidates; second, by ensur- ing that the degree of co-mention influence is de- termined by the trustworthiness of the sources in which co-mentions occur. The contribution of this paper is a language- aware truth-finding approach. More precisely, we make the following contributions: (1) Al- ternative Fact Candidates: Truth-finders rank a given fact candidate with respect to its alter- natives. For example, alternative places where Barack Obama could have been born. Virtually all existing truth-finders assume that the alterna- tives are provided. In contrast, we developed a method for generating alternative fact candidates. (2) Objectivity-Trustworthiness Correlation: We hypothesize that objectivity of language and trust- worthiness of sources are positively correlated. To test this hypothesis, we designed a Mechanical Turk study. The study showed that this correlation does in fact hold. (3) Objectivity Classifier: Us- ing labeled data from the Mechanical Turk study, we developed and trained an objectivity classifier which performed better than prior proposed lexi- cons from literature. (4) Believability Computa- tion: We developed FactChecker, a truth-finding method that linearly combines objectivity and co- mention influence. Our experiments showed that FactChecker outperforms prior methods. </chunk>
	</section>
	<section>
		<heading>2 Fact Candidates </heading>
		<chunk>In this section, we formally define what constitutes a fact candidate and describe how we go about understanding semantics of fact candidates. We then present our approach for generating alterna- tive fact candidates. 2.1 Representation The triple format is the most common representa- tion of facts in knowledge bases. A formal specifi- cation of the triple format is presented in the RDF primer 1 . In RDF, data is represented as subject- predicate-object (SPO) triples. In this work, we restrict predicates to verbs (or verbal phrases such as plays for, graduated from, etc.). Litera- ture on automatic relation discovery (Fader et al., 2011) has shown that verbal phrases uncover a large fraction of binary predicates while reducing the amount of noisy phrases that do not denote any relations. Therefore, we define a fact candidate as follows: Definition 1 (Fact Candidate) A fact candidate f i is an S V O triple; where S is the subject, V is a verbal phrase, and O is the object. We aim to compute the truthfulness of f i , (f i ) {T, F }, where T and F stand for true and f alse, respec- tively. Note that in this paper we are interested in cases where (f i ) is either T or F . That is, we assess truthfulness of factual statements and not opinions whose truthfulness is often both T and F to some degree. For example, the triples: Obama born in Kenya and Obama graduated from Harvard are valid fact candidates. However, the triple: Obama deserves Nobel Peace Prize is not. </chunk>
	</section>
	<section>
		<heading>2.2 Semantics </heading>
		<chunk>Based on the SVO triple, the meaning of a fact candidate can be unclear and ambiguous. There- fore, we first determine the semantics of a fact can- didate before computing its truthfulness. Entity Types. We first determine the expected types of the subject and object in the SVO. For ex- ample, for the SVO Einstein died in Princeton, the expected types are person location. We de- termine this by first computing the types of en- tities that are valid for each verb (verbal phrase) in a large SVO collection of 114m SVO triples (Talukdar et al., 2012). Typing verbal phrases is a once-off computation. Our phrase typing method is similar to prior work on typing rela- tional phrases (Nakashole et al., 2012). Exam- ples of typed phrases are: person died in year, person died in location, and athlete plays for team. Given a triple, we look up the types for the subject and the object and then determine which of the typed phrases are compatible with the cur- rent triple. We look up entity types in a knowledge 1 http://www.w3.org/TR/rdf-primer/ 1010 base containing entities and their types. In partic- ular, we use the NELL entity typing API (Carlson et al., 2010). NELLs entity typing method has high recall because when entities are not in the knowledge base, it performs on-the-fly type infer- ence using the Web. This is not the case for other options such as (Auer et al., 2007; Bollacker et al., 2008; Hoffart et al., 2011). Relation Cardinality. Next, we learn cardinali- ties of verbal phrases. Cardinality refers to how arguments of a given relation relate to one another numerically. We define the relation cardinality of a verb Card(V ), as the average number of expected arguments per given subject. For example, for the relation died in, 1 location is expected for each subject. For other relations, the expected number of arguments can be greater than 1 but less than n : n R, n &gt; 1. We approximate n using statistics from the 114m SVO corpus based on the average number of arguments per given first argu- ment. In a once-off computation, we generate car- dinality approximations per typed verbal phrase V and its inverse V 1 . For example, we generate the cardinality estimates for both: person died in location and for location INVERSE-OF(died in) person. Synonymous Relations. Natural language is di- verse. Semantically similar phrases can be syntac- tically different. Therefore, we learn other verbs that can be used to substitute V in SVO. We pre-compute synonymous phrases from the 114m SVO corpus using distributional semantics in the same spirit as (Lin and Pantel, 2001; Nakashole et al., 2012). Synonymous verbs, relation cardinalities, and entity types enable us to generate alternative fact candidates. </chunk>
	</section>
	<section>
		<heading>2.3 Alternative Fact Candidates </heading>
		<chunk>Truth-finding methods rank f i relative to alter- native candidates. While prior methods assume the alternatives are known apriori, we developed a method for generating alternative fact candi- dates. For a given f i , we first identify the fixed argument. The fixed argument is the argument of the SVO which when fixed, requires finding the fewest number of alternative candidates. For ex- ample, for Einstein died in Princeton, the so- lution is to fix the subject. This is because the car- dinality of person died in location is one (1). On the other hand, the cardinality of INVERSE- OF(died in) is many(n). In other words, the num- ber of places where a person can be born (one) is much fewer than the number of people that can die in a place (many). In our example, al- ternatives are possible places, other than Prince- ton, where Einstein could have died. For example: Einstein died in Germany or Einstein died in Switzerland. More generally, the fixed argument of fact candidate f i , is defined as follows: Definition 2 (Fixed Argument) Let Card(V) be the cardinality of V and Card(V 1 ) be the car- dinality of the inverse of V , if Card(V ) &lt; Card(V 1 ), then the fixed argument is the sub- ject, Arg f ixed (f i ) = S, else it is the object, O. If Card(V ) == Card(V 1 ), then both arguments are fixed, one at a time. We use the fixed argument to define a topic as the fixed argument plus the verb. Therefore, for the SVO X died in Y, the topic places where X died, (Arg f ixed = S), is not the same as the topic people who died in Y (Arg f ixed = O). To locate alternatives, we use the topic (Arg f ixed + V ) as a query. We search three sources to either locate relevant documents or rele- vant triples: the Google Web search API, the 114m SVO collection, and the NELL KB. The SVO col- lection and the KB return triples, however, the Web search API returns documents. Therefore, we apply a triple extractor to the retrieved docu- ments. For all potential alternative triples, we per- form type checking to ensure that the arguments of the triples are type-compatible with f i . Further- more, we generate an additional query for every synonymous verb sV i , replacing V with sV i . Ex- ample queries are: Einstein died in, Einstein passed in, etc. </chunk>
	</section>
	<section>
		<heading>3 Objectivity and Trustworthiness </heading>
		<chunk>The principle of objective journalism, which is a significant part of journalistic ethics, aims to promote factual and fair reporting, undistorted by emotion or personal bias (Schudson, 1978; Ka- plan, 2002). Objectivity is also required in refer- ence sources such as encyclopedias, scientific pub- lications, and textbooks. For example, Wikipedia enforces a neutral point-of-view policy (NPOV) 2 . Articles violating the NPOV policy are marked 2 http://en.wikipedia.org/wiki/Wikipedia:Neutral point of view 1011 to indicate potential bias. While opinions, emo- tions, and speculations can also be expressed us- ing objective language, they are often stated using subjective language (Turney et al., 2002; Riloff and Wiebe, 2003; Yu and Hatzivassiloglou, 2003; Wiebe et al., 2004; Liu et al., 2005; Recasens et al., 2013). For example, consider the following pieces of text: (S) Well, I think Obama was born in Kenya because his grandma who lives in Kenya said he was born there. (O) Theories allege that Obamas published birth certificate is a forgery, that his actual birthplace is not Hawaii but Kenya. Text S is a snippet from Yahoo Answers and text O is a snippet from the Wikipedia page ti- tled: Barack Obama Citizenship Conspiracy The- ories. S is subjective, expressing the opinion of the author. On the other hand, O is objective, stat- ing only what has been alleged. Literature on sen- timent analysis (Turney et al., 2002; Liu et al., 2005), subjectivity detection (Riloff and Wiebe, 2003; Wiebe et al., 2004), and bias detection (Yu and Hatzivassiloglou, 2003; Recasens et al., 2013) has developed lexicons for identifying subjective language. Due to the principle of objective jour- nalism and the requirement of objectivity placed on reference sources, we hypothesize a link be- tween objectivity and trustworthiness as follows. Hypothesis 1 Objective sources are more trust- worthy than subjective sources. Therefore, we can assume that fact candidates stated in objec- tive sources are more likely to be true than those stated in subjective sources. To test the validity of the hypothesis, we carried out a study where we solicited human input. 3.1 Mechanical Turk Study We deployed an annotation study on Amazon Me- chanical Turk (MTurk) 3 , a crowd-sourcing plat- form for tasks requiring human input. Tasks on MTurk are small questionnaires consisting of a de- scription and a set of questions. Our study con- sisted of two independent tasks. The first task was titled Trustworthiness of News Articles, where annotators were given a link to a news article and 3 http://www.mturk.com Figure 1: Summary of the results of the annotation study on objectivity and trustworthiness. asked to judge if they thought it was trustworthy or not. The second task was titled Objectivity of News Articles. For this task, annotators were asked to judge if a given article is objective or sub- jective. For both tasks a third option of not sure was provided. We randomly selected 500 news ar- ticles from a corpus of about 300,000 news articles obtained from Google News from the topics of Top News, Business, Entertainment, and SciTech. For each task, every article was judged by three annotators. This produced a total of 3000 annota- tions. When we analyzed the output, we accepted a label as valid for a given article if the label was selected by the majority of the judges. Based on this criteria, we obtained a set of 420 articles that were both labeled for trustworthiness and objec- tivity. A summary of the outcome of the study is shown in Figure 1; 74% of the untrustworthy articles were independently labeled as subjec- tive. On the other hand, 64% of trustworthy articles were independently labeled as objective. These results indicate a non-trivial positive cor- relation between objectivity and trustworthiness. We leverage this correlation in our believability computation model. To incorporate objectivity in FactChecker, we require for a given source docu- ment, an objectivity score [0, 1], where 0 means the source is subjective and 1 means it is objec- tive. Next, describe our method for automatically determining objectivity of sources. </chunk>
	</section>
	<section>
		<heading>3.2 Automatic Objectivity Detection </heading>
		<chunk>We trained a logistic regression classifier to pre- dict the objectivity of a document. For training and testing data, we used the labeled data from the Mechanical Turk study. We additionally used labeled text from prior work on subjectivity de- tection (Pang and Lee, 2004). This resulted in a total of 4, 600 documents, half subjective and the other half objective. We used 4000 documents for 1012 # Feature 1 Subjectivity lexicon of strong and weak subjective words (Riloff and Wiebe, 2003). 2 Sentiment lexicon of positive and negative words (Liu et al., 2005). 3 Wikipedia-derived bias lexicon (Recasens et al., 2013). 4 Part-of-speech (POS) tags 5 Frequent bi-grams Table 1: Features used for the objectivity detector. training, 2000 per label. The rest of the documents were split into a development set (380) and a test set (220). A summary of the features we used is shown in Table 1. Features 1-3 refer to lexicons devel- oped by prior methods on subjectivity (Wiebe et al., 2004), sentiment analysis (Liu et al., 2005) and bias detection (Recasens et al., 2013). Feature 4 refers to part-of-speech tags of the terms found in the document that are also in the lexicons. Feature 5 refers to bi-grams that frequently occur (men- tion frequency of &gt; 10) in the 4, 600 documents. The most contributing features were the lexicons, features (1-3) and the frequent bi-grams, feature 5. We discovered that using frequent bi-gram fea- tures instead of uni-grams or bi-grams resulted in higher precision. The classifier was able to de- termine that for example bi-grams such as think that, so funny and you thought are negative features for objectivity. Evaluation results of our objectivity detector vs. baselines are shown in Ta- ble 2. FactCheckers objectivity detector has pre- cision of 0.7814 0.0539, with a 0.9-confidence Wilson score interval (Brown et al., 2001) and this outperforms the baselines. Next, we describe how we leverage objectivity into FactCheckers truth- fulness model. </chunk>
	</section>
	<section>
		<heading>4 Believability Computation Model </heading>
		<chunk>FactChecker computes the believability score of a fact candidate from its: i) objectivity score and (ii) co-mention score. In this section we define each of these scores. The objectivity score reflects the trustworthi- ness of sources where a fact candidate is men- tioned. Given a fact candidate f i , mentioned in a set of documents D i , where each document d Approach Accuracy Sentiment Lexicon 0.650.06 Wikipedia bias Lexicon 0.690.06 Subjectivity Lexicon 0.700.06 FC-Objectivity Detector 0.780.05 Table 2: Accuracy of the objectivity detector. D i has objectivity O(d), f i s objectivity score is defined as follows: Definition 3 (Objectivity Score) O(f i ) = log|D i |. d k D i O(d k ) |D i | (1) We do not use the sum of objectivity of sources as the objectivity score because this enables fact candidates mentioned in many low objectivity sources to have high aggregate objectivity. Sim- ilarly, we avoid using average objectivity of the sources as it overestimates objectivity of candi- dates stated in few sources. A candidate men- tioned in 10 sources with 0.9 objectivity should have higher objectivity than a candidate stated in 1 source of 0.9 objectivity. In Equation 1, log|D i | addresses this issue. The co-mention score aims to ensure that fact candidates mentioned in similar sources have sim- ilar believability scores. Suppose candidate f i is mentioned in many highly objective sources, an- other candidate f j is stated in only one highly ob- jective source d k where f i is also mentioned. Then the believability of f j should be boosted by it be- ing co-mentioned with f i . If on the other hand f i and f j were co-mentioned in a subjective source, f j should receive less boost from f i . This leads us to the co-mention score (f i ) of a candidate. Definition 4 (Co-Mention Score) (f i ) = (f i ) + f j F w ij (f j ) (2) Where (f i ) is the normalized mention fre- quency of f i . The propagation weight w ij controls how much boost is obtained from a co-mentioned candidate. We define propagation weight, w ij , as the average of the objectivity of the sources that mention both candidates. w ij = average O(d k ) : d k (D i D j ) (3) 1013 where O(d k ) is the objectivity of document d k , D i and D j are the sets of documents that mention f i and f j , respectively. Notice that we could boost co-mentioned but not related candidates, thereby causing false boosts. To remedy this, we only al- low w ij to be greater than zero if the fact can- didates f i and f j are on the same topic. Recall that the topic is determined by the fixed argument (Definition 2) and the verb. Allowing only fact candidates on the same topic to influence each other is important considering that many trivial facts are often repeated in sources of diverse qual- ity. To leverage the inter-dependencies among re- lated co-mentioned fact candidates, we model the solution with a graph ranking method. Each fact candidate is a node and there is an edge between each pair of related fact candidate nodes f i and f j , with w ij as the edge weight. Thus, equation 2 can be reformulated as = M , where is the co-mention score vector and M is a Markov ma- trix which is stochastic, irreducible and aperiodic. Thus, a power method will converge to a solution in a similar manner to PageRank. Implementation consists of iteratively applying Equation 2 until the change in the score is less than a threshold . The solution is the final co-mention scores of fact candidates. Finally, to compute the believability score of a fact candidate, we linearly combine its objectivity score with its co-mention as follows: Definition 5 (Believability Score) (f i ) = O(f i ) + (1 )(f i ) (4) Where is a weighting parameter [0, 1] which controls the relative importance of the two aspects of FactChecker. As we show in our exper- iments, can be robustly chosen within the range of 0.2 to 0.6. In our experiments we used = 0.6. The entire procedure of FactChecker is summa- rized in Algorithm 1. </chunk>
	</section>
	<section>
		<heading>5 Evaluation </heading>
		<chunk>We evaluated FactChecker for accuracy. We de- fine accuracy as the probability of a true fact can- didate having a higher believability score than a false candidate. Let (f i ) {T, F } be the truth- fulness of a fact candidate f i , accuracy is defined as: Algorithm 1 FactChecker Input: A set F of fact candidates Input: KB K, SVO corpus C, Web W Output: A set L of rankings f i F L = while F = do pick f i from F A= getAlternatives(f i ,K,C,W) P riorityQueue L i = for all alternative fact candidates f j A do (f j ) = getBelievabilityScore(f j ) L i .insert(f j , (f j )) end for (f i ) = getBelievabilityScore(f i ) L i .insert(f i , (f i )) L L i Remove f i from F end while return L Acc = ( (f i )=T : (f j )=F ) ((f i ) &gt; (f j )) |{(f i , f j ) : (f i ) = T (f j ) = F }| Datasets. We evaluated FactChecker on three datasets: i) KB Fact Candidates: The first dataset consists of fact candidates taken from the fact ex- traction pipeline of a state-of-the-art knowledge base, NELL (Carlson et al., 2010). The fact candi- dates span four different relation types: company acquisitions, book authors, movie directors and athlete teams. For each fact candidate, we applied our alternative candidate generation method. We only considered fact candidates with non-trivial alternative candidate sets; where the alternative candidate set is greater than zero. Since all of the baselines we compared against assume alter- natives are provided, we apply all methods to the same set of alternative fact candidates discovered by our method. Details of this dataset are shown as rows starting with KB- in Table 3. ii) Wikipedia Fact Candidates: For the sec- ond dataset, we did not restrict the fact candidates to specific topics from a knowledge base, instead we aimed to evaluate all fact candidates about a given entity. We selected entities from Wikipe- dia. For this, we chose US politicians: all current state senators, all current state governors, and all 44 presidents. First, we extracted fact candidates 1014 #Candidates #Alternatives KB-Acquisitions 50 241 KB-Authors 50 295 KB-Directors 50 228 KB-Teams 40 162 WKP Politicians 54 219 GK Quiz 18 72 Table 3: Fact candidate datasets. from the infoboxes of the Wikipedia pages of the entities. Second, we applied our alternative can- didate generation method to discover alternatives from the Web, SVO corpus, and NELL. Details of the resulting dataset are shown in the row WKP Politicians in Table 3. iii) General Knowledge Quiz: The third dataset consists of questions from a general knowledge quiz 4 . We selected questions from the inventions category. Questions are multiple choice, with 4 options per question. Thus, from each question, we created one fact candidate and 3 alternative candidates. Details of the resulting dataset are shown in the row KWP Quiz in Ta- ble 3. Baselines. We compared FactChecker against five baselines: i) Vote counts the number of sources that mention the fact candidate. ii) TruthFinder is an iterative voting approach where votes are prop- agated from sources to fact candidates and then back to sources. Implemented as described in (Yin et al., 2007). iii) Investment is also based on tran- sitive voting, however scores are updated differ- ently. A source gets a vote of trust from each candidate it invests in, but the vote is weighted by the proportion of trust the source previously invested in the candidate relative to other in- vestors. Implemented as described in (Pasternack and Roth, 2010). iv) PooledInvest is a variation of investment, we report both because in their pa- per, there was no clear winner among the two vari- ations. v) 2-Estimates is a probabilistic model which approximates error rates of sources and fact candidates (Galland et al., 2010). </chunk>
	</section>
	<section>
		<heading>5.1 Accuracy on KB Fact Candidates </heading>
		<chunk>Figure 2 shows accuracy on KB fact candidates. FactChecker achieves accuracy between 70% and 88% and is significantly more accurate than the 4 http://www.indiabix.com/general-knowledge/ Figure 2: Accuracy of KB fact candidates. Figure 3: FactChecker variations. other approaches on all relations except com- pany acquisitions. On book authors, movie di- rectors, and athlete teams, FactChecker outper- forms all other approaches by at least 10%, 9%, and 8% respectively. On company acquisitions, the different methods achieve similar accuracy, with TruthFinder being the most accurate and FactChecker is 4% behind. Company acquisitions also yield the lowest difference between Vote and the highest performing method, of 6%. For book authors, movie directors, and athlete teams, the difference between majority Vote and the highest performing method (FactChecker in this case) is 13%, 12%, and 13% respectively. </chunk>
	</section>
	<section>
		<heading>5.2 Accuracy of FactChecker Variations </heading>
		<chunk>To quantify how various aspects of our approach affect overall performance, we studied two varia- tions. The first variation is FC-Objectivity which only uses objectivity to compute believability. Thus, = 1 in Definition 5. The second varia- tion is FC-CoMention which only uses co-mention scores to compute believability, = 0. The 1015 Approach WKP Politicians GK Quiz Vote 0.850.09 0.820.15 TruthFinder 0.850.09 0.820.15 2-Estimates 0.850.09 0.820.15 Investment 0.860.08 0.820.15 PooledInvest 0.850.09 0.820.15 FC-Objectivity 0.880.08 0.870.12 FC-CoMention 0.850.09 0.720.18 FactChecker 0.900.07 0.870.12 Table 4: Accuracy on politicians and quiz data sets last variation is the full FactChecker method us- ing both objectivity and co-mentions with = 0.6 From Figure 3, it is clear that both the objectiv- ity of sources and the influence of co-mentions contribute to the overall accuracy of FactChecker. Full-fledged FactChecker performs better than both variations. In most cases, FC-Objectivity per- forms better than FC-CoMention. </chunk>
	</section>
	<section>
		<heading>5.3 Accuracy on Wikipedia Fact Candidates </heading>
		<chunk>Table 4, column WKP Politicians, shows ac- curacy on Wikipedia fact candidates, with a 0.9- confidence Wilson score interval (Brown et al., 2001). For this dataset we again see FactChecker outperforming the other methods under compari- son. On this dataset, FactChecker has a accuracy of 0.9 0.07 and a 5% accuracy advantage over the other methods. The second best performance comes from the FC-Objectivity variation, with ac- curacy of 0.88 0.08. </chunk>
	</section>
	<section>
		<heading>5.4 Accuracy on General Knowledge Quiz </heading>
		<chunk>Table 4, column GK Quiz , shows accuracy on the general knowledge quiz fact candidates. On this dataset, FactChecker and its objectivity-only variation (FC-objectivity) have the highest accu- racy of 87%. Notice that this dataset was the only one where we did not generate the alternative fact candidates. Instead, we took the options of the multiple choice questions as alternatives. Since the quiz is meant to be taken by humans, the alter- natives are often very close, plausible answers. Yet even in this difficult setting, we see FactChecker outperforming the baselines. Sample fact candidates, with ranked alternatives from all three datasets are shown in Table 5. Figure 4: Effect of of FactChecker. </chunk>
	</section>
	<section>
		<heading>5.5 Parameter Sensitivity </heading>
		<chunk>We analyzed the effect of the selection of lambda (see Definition 5) on FactCheckers perfor- mance. The result of this analysis is shown in Fig- ure 4. FactChecker is insensitive to this parame- ter when is varied from 0.2 to 0.6. Therefore, lambda can be robustly chosen within this range. </chunk>
	</section>
	<section>
		<heading>5.6 Discussion </heading>
		<chunk>Overall, from these results we make the follow- ing observations: i) Majority vote is a competitive baseline; ii) Iterative voting-based methods pro- vide slight improvements on majority vote. This is due to the fact that at the core of iterative vot- ing is still the assumption that fact candidates mentioned in many sources are more likely to be true. Therefore, for both majority vote and it- erative voting, when mention frequencies of var- ious alternatives are the same, accuracy suffers. Based on these observations, it is clear that truth- finding solutions need to incorporate fine-grained content-aware features outside of external votes. FactChecker takes a step in this direction by incor- porating the document-level feature of objectivity. </chunk>
	</section>
	<section>
		<heading>6 Related Work </heading>
		<chunk>There is a fairly small body of work on truth- finding (Yin et al., 2007; Galland et al., 2010; Pasternack and Roth, 2010; Li et al., 2011; Yin and Tan, 2011; Zhao et al., 2012; Pasternack and Roth, 2013). The method underlying most truth-finding algorithms is iterative transitive voting (Yin et al., 2007; Galland et al., 2010; Pasternack and Roth, 2010; Li et al., 2011). Fact candidates are ini- tialized with a score. Trustworthiness of sources is then computed from the believability of the fact candidates they mention. In return, believability of candidates is recomputed based on the trustworthi- 1016 Dataset Fact Candidate Alternatives &amp; Ranking WKP George W. Bush lived in Midland,TX 1.Midland,TX 2.Compton,CA 3.Washington D.C. 4.Venezuela* KB Dirk Kuyt plays for Liverpool 1. Liverpool 2.Cardiff City* 3.Netherlands 4.Hungary* Quiz Bifocals invented by Benjamin Franklin 1. Benjamin Franklin 2. Rudolf Diesel* 3.Thomas Alva Edison* 4.Alfred B. Nobel* Table 5: Sample rankings by FactChecker, alternatives marked (*) are false. The ranking of the candidate from the KB dataset is not completely accurate. ness of their sources. This process is repeated over several iterations until convergence. (Yin et al., 2007) was the first to implement this idea, subse- quent work improved upon iterative voting in sev- eral directions. (Dong et al., 2009) incorporates copying-detection; giving high trust to sources that are independently authored. (Galland et al., 2010) approximates error rates of sources and fact candidates. (Pasternack and Roth, 2010) intro- duces prior knowledge in the form of linear pro- gramming constraints in order to ensure that the truth discovered is consistent with what is already known. (Yin and Tan, 2011) introduces supervi- sion by using ground truth facts so that sources that disagree with the ground truth are penalized. (Li et al., 2011) uses search engine APIs to gather additional evidence for believability of fact can- didates. WikiTrust (Adler and Alfaro, 2007) is a content-aware but domain-specific method. It computes trustworthiness of wiki authors based on the revision history of the articles they have authored. Motivated by interpretability of prob- abilistic scores, two recent papers addressed the truth-finding problem as a probabilistic inference problem over the sources and the fact candidates (Zhao et al., 2012; Pasternack and Roth, 2013). Truth-finders based on textual entailment such as TruthTeller (Lotan et al., 2013) determine if a sen- tence states something or not. The focus is on un- derstanding natural language, including the use of negation. This is similar to the goal of fact ex- traction (Banko et al., 2007; Carlson et al., 2010; Fader et al., 2011; Nakashole et al., 2011; Del Corro and Gemulla, 2013). In a departure from prior work, our method leverages language of sources in its believability computation model. Furthermore, we introduced a co-mention score which is designed to avoid po- tential false boots among fact candidates. Addi- tionally, we developed a method for generating al- ternative fact candidates. Prior methods assume these are readily available. Only (Li et al., 2011) uses the Web to identify alternatives, however, this is only done after manually specifying the fixed ar- gument. In contrast, we introduced a method for identifying the fixed argument based on relation cardinalities learned from SVO statistics. </chunk>
	</section>
	<section>
		<heading>7 Conclusion </heading>
		<chunk>In this paper, we presented FactChecker, a language-aware approach to truth-finding. In con- trast to prior approaches, which rely on external votes, FactChecker includes objectivity of sources in its believability computation model. FactChecker can be seen as a first step to- wards language-aware truth-finding. Future di- rections include using more sentence-level fea- tures such the use of hedges, assertive verbs, and factive verbs. These types of words fall into a class of words used to express certainties, spec- ulations or doubts these are important cues that FactChecker can leverage. Acknowledgments We thank members of the NELL team at CMU for their helpful comments. This research was supported by DARPA under contract number FA8750-13-2-0005. 1017 References S. Auer, C. Bizer, G. Kobilarov, J. Lehmann, R. Cyga- niak, Z.G. Ives: DBpedia: A Nucleus for a Web of Open Data. In Proceedings of the 6th International Semantic Web Conference (ISWC), pages 722735, Busan, Korea, 2007. B. T. Adler, L. de Alfaro: A content-driven reputa- tion system for the wikipedia. In Proceedings of the 16th International Conference on World Wide Web (WWW), pages 261-270, 2007. M. Banko, M. J. Cafarella, S. Soderland, M. Broad- head, O. Etzioni: Open Information Extraction from the Web. In Proceedings of the 20th International Joint Conference on Artificial Intelligence (IJCAI), pages 26702676, Hyderabad, India, 2007. K. D. Bollacker, C. Evans, P. Paritosh, T. Sturge, J. Taylor: Freebase: a Collaboratively Created Graph Database for Structuring Human Knowledge. In Proceedings of the ACM SIGMOD International Conference on Management of Data (SIGMOD), pages, 1247-1250, Vancouver, BC, Canada, 2008. L. D. Brown, T.T. Cai, A. Dasgupta: Interval Estima- tion for a Binomial Proportion. Statistical Science 16: pages 101133, 2001. E. Cabrio, S. Villata: Combining Textual Entailment and Argumentation Theory for Supporting Online Debates Interaction. In Proceedings of the 50th An- nual Meeting of the Association for Computational Linguistics (ACL), pp. 208-212, 2012. A. Carlson, J. Betteridge, R.C. Wang, E.R. Hruschka, T.M. Mitchell: Coupled Semi-supervised Learning for Information Extraction. In Proceedings of the Third International Conference on Web Search and Web Data Mining (WSDM), pages 101110, New York, NY, USA, 2010. L. Del Corro, R. Gemulla: ClausIE: clause-based open information extraction. In Proceedings of the 22nd International Conference on World Wide Web (WWW), pages 355-366. 2013. X. Dong, L. Berti-Equille, D. Srivastava: Truth discov- ery and copying detection in a dynamic world. In Proceedings of the VLDB Endowment PVLDB, 2(1), pp. 562-573, 2009. A. Fader, S. Soderland, O. Etzioni: Identifying Rela- tions for Open Information Extraction. In Proceed- ings of the 2011 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 15351545, Edinburgh, UK, 2011. A. Galland, S. Abiteboul, A. Marian, P. Senellart: Cor- roborating information from disagreeing views. In Proceedings of the 3rd International Conference on Web Search and Web Data Mining (WSDM), pages 131-140, 2010. C. Havasi, R. Speer, J. Alonso: ConceptNet 3: a Flex- ible, Multilingual Semantic Network for Common Sense Knowledge. In Proceedings of the Recent Ad- vances in Natural Language Processing (RANLP), Borovets, Bulgaria, 2007. J. Hoffart, F. Suchanek, K. Berberich, E. Lewis- Kelham, G. de Melo, G. Weikum: YAGO2: Ex- ploring and Querying World Knowledge in Time, Space, Context, and Many Languages. In Proceed- ings of the 20th International Conference on World Wide Web (WWW), pages 229232, Hyderabad, In- dia. 2011. R. Kaplan: Politics and the American Press: The Rise of Objectivity, pages 1865-1920, New York, Cam- bridge University Press, 2002. X. Li and W. Meng, C. T. Yu: T-verifier: Verifying truthfulness of fact statements. In Proceedings of the International Conference on Data Engineering (ICDE), pp. 63-74, 2011. D. Lin, P. Pantel: DIRT: discovery of inference rules from text. KDD 2001 B. Liu, M. Hu, J. Cheng: Opinion Observer: analyzing and comparing opinions on the Web. InProceedings of the 14th International Conference on World Wide Web (WWW), pages 342351, 2005. A. Lotan, A. Stern, I. Dagan TruthTeller: Annotating Predicate Truth. In Proceedings of Human Language Technologies: Conference of the North American Chapter of the Association of Computational Lin- guistics (HLT-NAACL), pp. 752-757, 2013. N. Nakashole, M. Theobald, G. Weikum: Scalable Knowledge Harvesting with High Precision and High Recall. In Proceedings of the 4th International Conference on Web Search and Web Data Mining (WSDM), pages 227326, Hong Kong, China, 2011. N. Nakashole, T. Tylenda, G. Weikum: Fine-grained Semantic Typing of Emerging Entities. In Proceed- ings of the 51st Annual Meeting of the Associa- tion for Computational Linguistics (ACL), pp. 1488- 1497, 2013. N. Nakashole, G. Weikum, F. Suchanek: PATTY: A Taxonomy of Relational Patterns with Seman- tic Types. In Proceedings of the 2012 Joint Con- ference on Empirical Methods in Natural Lan- guage Processing and Computational Natural Lan- guage Learning (EMNLP-CoNLL), pages 1135 - 1145, Jeju, South Korea, 2012. V. Nastase, M. Strube, B. Boerschinger, C. Zirn, A. Elghafari: WikiNet: A Very Large Scale Multi- Lingual Concept Network. In Proceedings of the 7th International Conference on Language Resources and Evaluation(LREC), Malta, 2010. B. Pang, L. Lee: A Sentimental Education: Sentiment Analysis Using Subjectivity Summarization Based 1018 on Minimum Cuts. In Proceedings of the 42nd An- nual Meeting of the Association for Computational Linguistics (ACL), 271-278, 2004. J. Pasternack, D. Roth: Knowing What to Believe. In Proceedings the International Conference on Com- putational Linguistics (COLING), pp. 877-885, Bei- jing, China. 2010. J. Pasternack, D. Roth: Latent credibility analysis. In Proceedings of the 22nd International Conference on World Wide Web (WWW), pp. 1009-1020, 2013. E. Riloff, J. Wiebe: Learning Learning extraction pat- terns for subjective expressions. In Proceedings of the 2011 Conference on Empirical Methods in Nat- ural Language Processing (EMNLP), pages 105112, 2013. M. Recasens, C. Danescu-Niculescu-Mizil, D. Juraf- sky: Linguistic Models for Analyzing and Detecting Biased Language. In Proceedings of the 51st Annual Meeting of the Association for Computational Lin- guistics (ACL), pp. 1650-1659, 2013. F. Niu, C. Zhang, C. Re, J. W. Shavlik: DeepDive: Web-scale Knowledge-base Construction using Sta- tistical Learning and Inference. In the VLDS Work- shop, pages 25-28, 2012. M. Schudson: Discovering the News: A Social History of American Newspapers. New York: Basic Books. 1978. F. M. Suchanek, M. Sozio, G. Weikum: SOFIE: A Self-organizing Framework for Information Extrac- tion. InProceedings of the 18th International Con- ference on World Wide Web (WWW), pages 631640, Madrid, Spain, 2009. P. P. Talukdar, D. T. Wijaya, T.M. Mitchell: Acquir- ing temporal constraints between relations. In Pro- ceeding of the 21st ACM International Conference on Information and Knowledge Management, pages 992-1001, CIKM 2012. P. D. Turney: Thumbs up or thumbs down? Seman- tic orientation applied to unsupervised classification of reviews. In Proceedings of the 40th Annual Meet- ing of the Association for Computational Linguistics (ACL), pages 417424. 2002. J. Wiebe, T. Wilson, R. Bruce, M. Bell, M. Martin: Learning subjective language. Computational Lin- guistics, 30(3):277308. 2004. X. Yin, J. Han, P. S. Yu: Truth Discovery with Multiple Conflicting Information Providers on the Web. In Proceedings of the International Confer- ence on Knowledge Discovery in Databases (KDD) , pages1048-1052. 2007. X. Yin, W. Tan: Semi-supervised truth discover. In Proceedings of the 19th International Conference on World Wide Web (WWW), pp. 217-226, 2011. H. Yu, V. Hatzivassiloglou: Towards Answering Opin- ion Questions: Separating Facts from Opinions and Identifying the Polarity of Opinion Sentences. In Proceedings of the Conference on Empirical Meth- ods in Natural Language Processing, pages. 129- 136, 2003. B. Zhao, B. I. P. Rubinstein, J. Gemmell, J. Han: A Bayesian approach to discovering truth from con- flicting sources for data integration. In Proceedings of the VLDB Endowment (PVLDB), 5(6):550-561, 2012. 1019 </chunk>
	</section>
</sec_map>

